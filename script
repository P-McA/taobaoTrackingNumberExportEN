// ==UserScript==
// @name         淘宝买家订单导出
// @namespace    http://tampermonkey.net/
// @version      0.17
// @description  基于Greasy Fork上的一个订单管理脚本，修复了bug使得对于淘宝订单的导出功能重新可用。使用方法为到淘宝网页版，已买到的宝贝页面会增加两个按。点击添加本页订单即可将订单添加到带保存的订单列表中，点击导出即可导出CSV文件。
// @author       CMA
// @include      https://buyertrade.taobao*
// @require      https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.15/lodash.min.js
// @grant        window.close
// @grant        GM_xmlhttpRequest
// @license      MIT
// @downloadURL https://update.greasyfork.org/scripts/414444/%E6%B7%98%E5%AE%9D%E4%B9%B0%E5%AE%B6%E8%AE%A2%E5%8D%95%E5%AF%BC%E5%87%BA.user.js
// @updateURL https://update.greasyfork.org/scripts/414444/%E6%B7%98%E5%AE%9D%E4%B9%B0%E5%AE%B6%E8%AE%A2%E5%8D%95%E5%AF%BC%E5%87%BA.meta.js
// ==/UserScript==


function addButton(element, onclickFunc, value = "按钮", width = "60px", height = "60px") {
    const button = document.createElement("input");
    button.type = "button";
    button.value = value;
    button.style.height = height;
    button.style.width = width;
    button.style.align = "center";
    button.style.marginBottom = "10px";
    button.style.marginLeft = "250px";
    button.style.color = "white";
    button.style.background = "#409EFF";
    button.style.border = "1px solid #409EFF";

    button.onclick = function () {
        onclickFunc();
    }

    element.appendChild(button);
    element.insertBefore(button, element.childNodes[0]);
}

const orderListPage = /(http|https):\/\/buyertrade\.taobao.*?\/trade/g;
if (orderListPage.exec(document.URL)) {
    const orderListMain = document.getElementById("J_bought_main");
    addButton(orderListMain, addCurrentPageOrdersToList, "添加本页订单", "160px");
    addButton(orderListMain, exportOrders, "导出订单", "160px");
}

function toCsv(header, data, filename) {
    let rows = "";
    let row = header.join(",");
    rows += row + "\n";

    _.forEach(data, value => {
        rows += _.replace(value.join(","), '#', '@') + "\n";
    })

    let blob = new Blob(["\ufeff" +rows],{type: 'text/csv;charset=utf-8;'});
    let encodedUrl = URL.createObjectURL(blob);
    let url = document.createElement("a");
    url.setAttribute("href", encodedUrl);
    url.setAttribute("download", filename + ".csv");
    document.body.appendChild(url);
    url.click();
}

let orderList = {}

function addCurrentPageOrdersToList() {
    const orders = document.getElementsByClassName("js-order-container");
    orderList = processOrders(orders);
}

function exportOrders() {
    const header = ["订单号", "商品明细", "商品链接", "单价", "数量", "实付款", "状态", "快递单号"];

    toCsv(header, orderList, "淘宝订单导出")
}

let isProcessing = false;
function processOrders(orders, currentOrderIndex = 0, results = []) {
    if (currentOrderIndex >= orders.length) {
        console.log('所有订单处理完成！');
        console.table(results);
        return results;
    }

    const order = orders[currentOrderIndex];
    const id = order.getAttribute('data-reactid').match(/order-(\d+)/)?.[1];
    console.log(`处理订单 ${id}，第 ${currentOrderIndex + 1}/${orders.length} 个订单`);

    // 处理单个订单中的商品
    processOrderItems(order, id, 0, [], (orderResults) => {
        console.log("push");
        results.push(...orderResults);
        setTimeout(() => {
            processOrders(orders, currentOrderIndex + 1, results);
        }, 500);
    });
}

function processOrderItems(order, id, index, itemResults, callback) {
    let outputData = {}
    try{
        let productQuery = order.querySelector("span[data-reactid='.0.7:$order-" + id + ".$" + id + ".0.1:1:0.$" + index + ".$0.0.1.0.0.1']");
        if (productQuery === null) {
            callback(itemResults);
            return;
        }
        let textContent = order.textContent;
        let pattern = /(\d{4}-\d{2}-\d{2})订单号: ()/;
        let isExist = pattern.exec(textContent);
        let priceQuery = order.querySelector("span[data-reactid='.0.7:$order-" + id + ".$" + id + ".0.1:1:0.$" + index + ".$1.0.1.1']");
        let countQuery = order.querySelector("p[data-reactid='.0.7:$order-" + id + ".$" + id + ".0.1:1:0.$" + index + ".$2.0.0']");
        let actualPayQuery = order.querySelector("span[data-reactid='.0.7:$order-" + id + ".$" + id + ".0.1:1:0.$" + index + ".$4.0.0.2.0.1']");
        let itemUrlQuery = order.querySelector("a[href]");

        if (index === 0) {
            let statusQuery = order.querySelector("span[data-reactid='.0.7:$order-" + id + ".$" + id + ".0.1:1:0.$" + index + ".$5.0.0.0']");
            var status = statusQuery.textContent;
        }
        let itemUrl = itemUrlQuery.href
        let price = priceQuery.textContent;
        let count = countQuery.textContent;
        if (actualPayQuery != null) {
            var actualPay = actualPayQuery.textContent;
        }
        outputData = [
            id,
            productQuery.textContent.replace(/,/g,"，"),
            itemUrl,
            parseFloat(price),
            count,
            actualPay,
            status
        ]

    }catch(error) {
        console.log(error)
    }


    let trackingNumber = 0;
    let itemTrackingQuery = order.querySelector('#viewLogistic');
    if (itemTrackingQuery) {

        const logisticsUrl = itemTrackingQuery.href;
        if (logisticsUrl) {
            // 存储原始窗口引用
            const originalWindow = window;
            let currentWindow = window.open(logisticsUrl);
            // 点击按钮打开新窗口
            setTimeout(() => {
                try {
                    if (currentWindow && !currentWindow.closed) {
                        // 获取快递单号
                        const parentElement = currentWindow.document.querySelector('.rax-view-v2.flexRow.pc-company-wrapper');
                        const childElement = parentElement.querySelector('.rax-view-v2.flexRow');
                        const trackingNumberElement = childElement.querySelectorAll('.rax-text-v2.desc')[1];
                        trackingNumber = trackingNumberElement.textContent;
                        console.log("traking info ", trackingNumber)

                        // 关闭窗口
                        currentWindow.close();
                    }

                } catch (error) {
                    console.error('获取物流信息失败:', error, " id: ", id);
                    // 确保窗口关闭
                    currentWindow.close();

                }
                outputData.push(trackingNumber)
                itemResults.push(outputData);
                console.log("processing next ", order, id)
                processOrderItems(order, id, index + 1, itemResults, callback);
            }, 2000)
        }
    } else {
        console.log("no tracking");
        // 直接处理下一个商品
        processOrderItems(order, id, index + 1, itemResults, callback);
    }
}
